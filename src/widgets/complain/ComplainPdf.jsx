import React from "react";
import {
  BlobProvider,
  Document,
  PDFDownloadLink,
  PDFViewer,
  Page,
  Text,
  StyleSheet,
  View,
  Image,
} from "@react-pdf/renderer";
import { useLocation } from "react-router-dom";
import { Button } from "@material-tailwind/react";
const formatDate = (dateString) => {
  const options = { day: "2-digit", month: "short", year: "numeric" };
  return new Date(dateString).toLocaleDateString("en-GB", options);
};
// import { Page, Text, View, Document, StyleSheet } from "@react-pdf/renderer";
// Create styles
const styles = StyleSheet.create({
  body: {
    // margin: "10px",
  },
  page: {
    flexDirection: "row",
    backgroundColor: "#E4E4E4",
  },
  section: {
    margin: 10,
    padding: 10,
    flexGrow: 1,
  },
  table: {
    display: "table",
    // width: "auto",
    // borderStyle: "solid",
    // borderColor: "red",
    // borderWidth: 1,
    borderRightWidth: 0,
    borderBottomWidth: 0,
  },
  tableRow: {
    margin: "auto",
    flexDirection: "row",
    borderBottom: "1px solid gray",
  },
  tableCol1: {
    width: "50%",
    // borderStyle: "solid",
    // borderColor: "red",
    // borderWidth: 1,

    // border: "1px solid red",
    borderLeftWidth: 0,
    borderTopWidth: 0,
  },

  tableCol: {
    width: "11%",
    // borderRight: "1px solid gray",
    // borderLeft: "1px solid gray",
    // borderStyle: "solid",
    // borderColor: "red",
    // borderWidth: 1,

    // border: "1px solid red",
    borderLeftWidth: 0,
    borderTopWidth: 0,
  },
  tableCell: {
    margin: "auto",
    marginTop: 5,
    fontSize: 10,
  },
});
const MyDoc = ({ complains, date }) => {
  const getStatusFixed = () => {
    var statusFixed = 0;
    complains?.filteredRecords?.map((item) => {
      item.status === "Fixed" && statusFixed++;
    });
    return statusFixed;
  };
  const getStatusNotFixed = () => {
    var statusFixed = 0;
    complains?.filteredRecords?.map((item) => {
      item.status === "Not-Fix" && statusFixed++;
    });
    return statusFixed;
  };

  const getStatusInProgress = () => {
    var statusFixed = 0;
    complains?.filteredRecords?.map((item) => {
      item.status === "In-Progress" && statusFixed++;
    });
    return statusFixed;
  };
  const getStatusPending = () => {
    var statusFixed = 0;
    complains?.filteredRecords?.map((item) => {
      item.status === "Pending" && statusFixed++;
    });
    return statusFixed;
  };

  return (
    <>
      <Document>
        <Page style={styles.body}>
          <View
            style={{
              padding: 20,
              marginBottom: "25px",
              backgroundColor: "#eeeeee",
              display: "flex",
              justifyContent: "space-between",
              flexDirection: "row",
              alignItems: "flex-start",
              borderBottom: "1px solid gray",
            }}
          >
            <View
              style={{
                display: "flex",
                justifyContent: "space-between",
                flexDirection: "column",
                alignItems: "center",
                gap: 10,
              }}
            >
              <Image src={"/img/awt_logo.png"} style={{ width: "50px" }} />
              <Text
                style={{
                  fontSize: "10",
                  color: "#292929",
                  display: "flex",
                }}
              >
                Army Welfare Trust
              </Text>
            </View>
            <View>
              <Text
                style={{
                  // margin: 20,
                  fontSize: "24",
                  color: "#292929",
                  display: "flex",
                  // justifyContent: "space-between",
                  // flexDirection: "row",
                }}
              >
                Complaints Report
              </Text>
            </View>

            <View
              style={{
                // margin: 20,
                display: "flex",
                justifyContent: "space-between",
                flexDirection: "column",
                alignItems: "center",
                gap: 10,
              }}
            >
              <Image src={"/img/fineit-logo.png"} style={{ width: "64px" }} />
              <Text
                style={{
                  // margin: 20,
                  fontSize: "10",
                  color: "#292929",
                  display: "flex",
                  // justifyContent: "space-between",
                  // flexDirection: "row",
                }}
              >
                Generated By FineIT
              </Text>
            </View>
          </View>

          <View
            style={{
              // border: "1px solid red",
              display: "flex",
              flexDirection: "row",
              justifyContent: "space-around",
              marginBottom: "30px",
            }}
          >
            <View
              style={{
                height: "100%",
                display: "flex",
                flexDirection: "column",
                justifyContent: "center",
                width: "40%",
              }}
            >
              <View>
                <Text style={{ fontSize: "12px" }}>
                  Records of complains between {formatDate(date.startDate)} and{" "}
                  {formatDate(date.endDate)}
                </Text>
              </View>
            </View>
            <View
              style={{
                // ...styles.table,
                // marginBottom: "35px",
                width: "40%",
                border: "1px solid gray",
                borderBottom: "none",
              }}
            >
              <View style={styles.tableRow}>
                <View style={styles.tableCol1}>
                  <Text
                    style={{
                      ...styles.tableCell,
                      fontWeight: "bold",
                      fontSize: 12,
                    }}
                  >
                    Total Complains
                  </Text>
                </View>
                <View style={styles.tableCol1}>
                  <Text style={styles.tableCell}>
                    {complains?.filteredRecords?.length}
                  </Text>
                </View>
              </View>

              <View style={styles.tableRow}>
                <View style={styles.tableCol1}>
                  <Text
                    style={{
                      ...styles.tableCell,
                      fontWeight: "bold",
                      fontSize: 12,
                    }}
                  >
                    Fixed
                  </Text>
                </View>
                <View style={styles.tableCol1}>
                  <Text style={styles.tableCell}>{getStatusFixed()}</Text>
                </View>
              </View>

              <View style={styles.tableRow}>
                <View style={styles.tableCol1}>
                  <Text
                    style={{
                      ...styles.tableCell,
                      fontWeight: "bold",
                      fontSize: 12,
                    }}
                  >
                    Not Fixed
                  </Text>
                </View>
                <View style={styles.tableCol1}>
                  <Text style={styles.tableCell}>{getStatusNotFixed()}</Text>
                </View>
              </View>

              <View style={styles.tableRow}>
                <View style={styles.tableCol1}>
                  <Text
                    style={{
                      ...styles.tableCell,
                      fontWeight: "bold",
                      fontSize: 12,
                    }}
                  >
                    In Progress
                  </Text>
                </View>
                <View style={styles.tableCol1}>
                  <Text style={styles.tableCell}>{getStatusInProgress()}</Text>
                </View>
              </View>

              <View style={styles.tableRow}>
                <View style={styles.tableCol1}>
                  <Text
                    style={{
                      ...styles.tableCell,
                      fontWeight: "bold",
                      fontSize: 12,
                    }}
                  >
                    Pending
                  </Text>
                </View>
                <View style={styles.tableCol1}>
                  <Text style={styles.tableCell}>{getStatusPending()}</Text>
                </View>
              </View>
            </View>
          </View>
          <View>
            {/* <View style={styles.tableRow}>
            <View style={styles.tableCol}>
              <Text
                style={{
                  ...styles.tableCell,
                  fontWeight: "bold",
                  fontSize: 12,
                }}
              >
                Complains
              </Text>
            </View>
            <View style={styles.tableCol}>
              <Text
                style={{
                  ...styles.tableCell,
                  fontWeight: "bold",
                  fontSize: 12,
                }}
              >
                Fixed
              </Text>
            </View>
            <View style={styles.tableCol}>
              <Text
                style={{
                  ...styles.tableCell,
                  fontWeight: "bold",
                  fontSize: 12,
                }}
              >
                Not Fixed
              </Text>
            </View>
            <View style={styles.tableCol}>
              <Text
                style={{
                  ...styles.tableCell,
                  fontWeight: "bold",
                  fontSize: 12,
                }}
              >
                In Progress
              </Text>
            </View>
            <View style={styles.tableCol}>
              <Text
                style={{
                  ...styles.tableCell,
                  fontWeight: "bold",
                  fontSize: 12,
                }}
              >
                Pending
              </Text>
            </View>
          </View>
          <View style={styles.tableRow}>
            <View style={styles.tableCol}>
              <Text style={styles.tableCell}>
                {complains?.filteredRecords?.length}
              </Text>
            </View>
            <View style={styles.tableCol}>
              <Text style={styles.tableCell}>{getStatusFixed()}</Text>
            </View>
            <View style={styles.tableCol}>
              <Text style={styles.tableCell}>{getStatusNotFixed()}</Text>
            </View>
            <View style={styles.tableCol}>
              <Text style={styles.tableCell}>{getStatusInProgress()}</Text>
            </View>
            <View style={styles.tableCol}>
              <Text style={styles.tableCell}>{getStatusPending()}</Text>
            </View>
          </View> */}
          </View>
          <View style={styles.table}>
            <View style={styles.tableRow}>
              <View style={{ ...styles.tableCol, width: "20%" }}>
                <Text
                  style={{
                    ...styles.tableCell,
                    fontWeight: "bold",
                    fontSize: 12,
                  }}
                >
                  Complainee
                </Text>
              </View>

              <View style={styles.tableCol}>
                <Text
                  style={{
                    ...styles.tableCell,
                    fontWeight: "bold",
                    fontSize: 12,
                  }}
                >
                  Categories
                </Text>
              </View>
              {/* <View style={styles.tableCol}>
                <Text
                  style={{
                    ...styles.tableCell,
                    fontWeight: "bold",
                    fontSize: 12,
                  }}
                >
                  Description
                </Text>
              </View> */}
              {/* <View style={styles.tableCol}>
                <Text
                  style={{
                    ...styles.tableCell,
                    fontWeight: "bold",
                    fontSize: 12,
                  }}
                >
                  By
                </Text>
              </View> */}
              <View style={styles.tableCol}>
                <Text
                  style={{
                    ...styles.tableCell,
                    fontWeight: "bold",
                    fontSize: 12,
                  }}
                >
                  Date
                </Text>
              </View>
              <View style={styles.tableCol}>
                <Text
                  style={{
                    ...styles.tableCell,
                    fontWeight: "bold",
                    fontSize: 12,
                  }}
                >
                  Status
                </Text>
              </View>
              <View style={{ ...styles.tableCol, width: "20%" }}>
                <Text
                  style={{
                    ...styles.tableCell,
                    fontWeight: "bold",
                    fontSize: 12,
                  }}
                >
                  Assigned To
                </Text>
              </View>
            </View>
            {complains?.filteredRecords?.map((item) => {
              return (
                <>
                  <View style={styles.tableRow}>
                    <View
                      style={{
                        ...styles.tableCol,
                        width: "20%",
                      }}
                    >
                      <Text style={{ ...styles.tableCell }}>{item?.name}</Text>
                    </View>
                    {/* <View style={styles.tableCol}>
                      <Text style={styles.tableCell}>{item?.subcategory}</Text>
                    </View> */}
                    <View style={styles.tableCol}>
                      <Text style={styles.tableCell}>{item?.category}</Text>
                    </View>
                    {/* <View style={styles.tableCol}>
                      <Text style={styles.tableCell}>
                        {item.description?.substring(0, 10)}....
                      </Text>
                    </View> */}
                    {/* <View style={styles.tableCol}>
                      <Text style={styles.tableCell}>{item?.official}</Text>
                    </View> */}
                    <View style={styles.tableCol}>
                      <Text style={styles.tableCell}>
                        {formatDate(item?.date)}
                      </Text>
                    </View>
                    <View style={styles.tableCol}>
                      <Text style={styles.tableCell}>{item?.status}</Text>
                    </View>
                    <View style={{ ...styles.tableCol, width: "20%" }}>
                      <Text style={styles.tableCell}>{item?.worker}</Text>
                    </View>
                  </View>
                </>
              );
            })}
          </View>
          <View
            style={{
              borderTop: "1px solid gray",
              marginTop: "10px",
            }}
          >
            <Text style={{ fontSize: 8, textAlign: "center", marginTop: 5 }}>
              *This is a computer Generated Slip
            </Text>
          </View>
        </Page>
      </Document>
    </>
  );
};
const ComplainPdf = () => {
  const location = useLocation();
  const { state } = location;

  const { complains, date } = state;
  return (
    <div>
      <div className="mb-12 mt-4 flex justify-center">
        <PDFDownloadLink
          document={<MyDoc complains={complains} date={date} />}
          fileName={`${formatDate(date.startDate)} to ${formatDate(
            date.endDate
          )}.pdf`}
        >
          {({ blob, url, loading, error }) =>
            loading ? (
              "Loading document..."
            ) : (
              <>
                <Button>Download Now!</Button>
              </>
            )
          }
        </PDFDownloadLink>
      </div>

      <div className="mb-24 mt-12">
        <div className="mx-auto" style={{ width: "800px" }}>
          <PDFViewer height={1000} width={800}>
            <MyDoc complains={complains} date={date} />
          </PDFViewer>
        </div>
      </div>
    </div>
  );
};

export default ComplainPdf;
